import undetected_chromedriver as uc
from selenium.webdriver.common.by import By
import time

def dump_jobs():
    print("üöÄ Launching undetected Chrome (non-headless)‚Ä¶")

    options = uc.ChromeOptions()
    options.add_argument("--start-maximized")
    options.add_argument("--disable-blink-features=AutomationControlled")

    # Optional spoofing
    options.add_argument("user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) "
                         "AppleWebKit/537.36 (KHTML, like Gecko) "
                         "Chrome/114.0.0.0 Safari/537.36")

    # Launch Chrome (change version_main=your chrome version if needed)
    driver = uc.Chrome(options=options)

    driver.get("https://www.google.com/search?q=driver+jobs+in+Newark+NJ&udm=8")

    # Wait manually to solve CAPTCHA
    input("‚úÖ Solve any CAPTCHA and press Enter to continue...")

    print("‚è≥ Scanning for job cards‚Ä¶")
    time.sleep(5)

    try:
        job_cards = driver.find_elements(By.CSS_SELECTOR, "a.MQUd2b")
        if not job_cards:
            print("‚ùå No job cards found.")
            driver.quit()
            return

        print(f"‚úÖ Found {len(job_cards)} job cards:\n")

        for card in job_cards[:5]:
            try:
                title = card.find_element(By.CSS_SELECTOR, "div.tNxQIb.PUpOsf").text
                company = card.find_element(By.CSS_SELECTOR, "div.wHYlTd.MKCbgd.a3jPc").text
                location = card.find_element(By.CSS_SELECTOR, "div.wHYlTd.FqK3wc.MKCbgd").text
                print(f"üßæ {title} ‚Äî {company} ‚Äî {location}")
            except Exception as e:
                print(f"‚ö†Ô∏è  Partial job info: {e}")

    except Exception as e:
        print(f"‚ùå Failed to scrape jobs:\n‚Üí {e}")

    input("\nPress Enter to close browser...")
    driver.quit()
    print("Browser closed.")

if __name__ == "__main__":
    dump_jobs()
